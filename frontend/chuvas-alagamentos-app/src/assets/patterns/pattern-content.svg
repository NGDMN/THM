// SVG Pattern inline - Padrão de Colmeia (baseado no manual de identidade)
const HexagonPattern = ({ opacity = 0.1, size = 80, variant = 'default' }) => {
  const getSizeVariation = () => {
    switch (variant) {
      case 'hero': return size * 1.5;
      case 'dense': return size * 0.75;
      case 'sparse': return size * 1.25;
      default: return size;
    }
  };
  
  const actualSize = getSizeVariation();
  const hexWidth = actualSize;
  const hexHeight = actualSize * 0.866; // altura do hexágono = largura * √3/2
  
  // Cria padrão de colmeia real com SVG
  const createHoneycombSVG = () => {
    const color = variant === 'hero' ? '1B4F72' : 'CB6D51';
    const strokeWidth = 0.8;
    
    // Padrão de colmeia: cada linha é deslocada horizontalmente
    const svgWidth = hexWidth * 2;
    const svgHeight = hexHeight * 1.5;
    
    return `data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='${svgWidth}' height='${svgHeight}' viewBox='0 0 ${svgWidth} ${svgHeight}'%3e%3cdefs%3e%3cg id='hex'%3e%3cpolygon points='${hexWidth/4},${hexHeight/3} ${hexWidth*3/4},${hexHeight/3} ${hexWidth},${hexHeight*2/3} ${hexWidth*3/4},${hexHeight} ${hexWidth/4},${hexHeight} 0,${hexHeight*2/3}' fill='none' stroke='%23${color}' stroke-width='${strokeWidth}' opacity='${opacity}'/%3e%3c/g%3e%3c/defs%3e%3cuse href='%23hex' x='0' y='0'/%3e%3cuse href='%23hex' x='${hexWidth*3/4}' y='${hexHeight/2}'/%3e%3cuse href='%23hex' x='${hexWidth*3/4}' y='${-hexHeight/2}'/%3e%3c/svg%3e`;
  };
  
  return (
    <Box
      sx={{
        position: 'absolute',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        zIndex: -1,
        overflow: 'hidden',
        '&::before': {
          content: '""',
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundImage: `url("${createHoneycombSVG()}")`,
          backgroundSize: `${hexWidth * 2}px ${hexHeight * 1.5}px`,
          backgroundRepeat: 'repeat',
          animation: variant === 'hero' ? 'patternFloat 30s linear infinite' : 'none',
        },
        '@keyframes patternFloat': {
          '0%': {
            transform: 'translateX(0) translateY(0)',
          },
          '100%': {
            transform: `translateX(-${hexWidth * 2}px) translateY(-${hexHeight * 1.5}px)`,
          },
        },
      }}
    />
  );
};